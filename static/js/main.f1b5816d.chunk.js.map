{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","step","itemWidth","frameSize","animationDuration","location","infinity","disabledPrev","disabledNext","handleNextClick","initLocation","width","props","images","length","setState","prevState","handlePrevClick","getChange","event","name","target","value","getInfinity","e","checked","this","className","style","transform","maxWidth","transition","map","image","src","alt","height","indexOf","type","onClick","disabled","htmlFor","id","min","max","onChange","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"gQAkBMA,E,4MACJC,MAAe,CACbC,KAAM,EACNC,UAAW,IACXC,UAAW,EACXC,kBAAmB,IACnBC,SAAU,EACVC,UAAU,EACVC,cAAc,EACdC,cAAc,G,EAGhBC,gBAAkB,WAChB,MAMI,EAAKT,MALPK,EADF,EACEA,SACAC,EAFF,EAEEA,SACAJ,EAHF,EAGEA,UACAD,EAJF,EAIEA,KACAE,EALF,EAKEA,UAGIO,EAAe,EAAKV,MAAME,UAAY,EAAKF,MAAMC,KACjDU,GAAS,EAAKC,MAAMC,OAAOC,OAASX,GAAaD,EAEvD,EAAKa,UAAS,SAACC,GAAD,MAAgB,CAC5BX,SAAYH,EAAYD,EAAQe,EAAUX,UAAYM,EAClDA,EACAK,EAAUX,SAAWK,EACzBH,cAAc,MAGVF,EAAWK,GAAiBC,IAAWL,GAC3C,EAAKS,SAAS,CACZP,cAAc,IAIdF,GAAYD,GAAYM,GAC1B,EAAKI,SAAS,CACZV,SAAU,EACVG,cAAc,K,EAKpBS,gBAAkB,WAChB,IAAQZ,EAAa,EAAKL,MAAlBK,SACFK,EAAe,EAAKV,MAAME,UAAY,EAAKF,MAAMC,KAEvD,EAAKc,UAAS,SAACC,GAAD,MAAgB,CAC5BX,SAAWW,EAAUX,SAAWK,EAAgB,EAC5CM,EAAUX,SAAWK,EACrB,EACJF,cAAc,MAGXH,EAAWK,GAAiB,GAC/B,EAAKK,SAAS,CACZR,cAAc,K,EAKpBW,UAAY,SAACC,GACX,IAAQC,EAASD,EAAME,OAAfD,KAER,EAAKL,SAAL,eAAiBK,GAAQD,EAAME,OAAOC,S,EAGxCC,YAAc,SAACC,GACb,IAAQC,EAAYD,EAAEH,OAAdI,QAER,EAAKV,UAAS,iBAAO,CACnBT,SAAUmB,OAGI,IAAZA,GACF,EAAKV,UAAS,iBAAO,CACnBP,cAAc,O,4CAKpB,WACE,IAAQK,EAAWa,KAAKd,MAAhBC,OACR,EASIa,KAAK1B,MARPE,EADF,EACEA,UACAC,EAFF,EAEEA,UACAC,EAHF,EAGEA,kBACAC,EAJF,EAIEA,SACAE,EALF,EAKEA,aACAC,EANF,EAMEA,aACAF,EAPF,EAOEA,SACAL,EARF,EAQEA,KAGF,OACE,sBAAK0B,UAAU,WAAf,UACE,qBACEA,UAAU,sBACVC,MAAO,CAAEjB,MAAM,GAAD,OAAKT,EAAYC,EAAjB,OAFhB,SAIE,oBACEwB,UAAU,iBACVC,MAAO,CACLC,UAAU,eAAD,OAAiBxB,EAAjB,OACTyB,SAAS,GAAD,OAAKjB,EAAOC,OAASZ,EAArB,MACR6B,WAAW,GAAD,OAAK3B,EAAL,OALd,SAQGS,EAAOmB,KAAI,SAAAC,GAAK,OACf,6BACE,qBACEC,IAAKD,EACLE,IAAI,MACJR,UAAU,qBACVC,MAAO,CACLjB,MAAM,GAAD,OAAKT,EAAL,MACLkC,OAAO,GAAD,OAAKlC,EAAL,UAPHW,EAAOwB,QAAQJ,WAc9B,sBAAKN,UAAU,WAAf,UACE,wBACEW,KAAK,SACLC,QAASb,KAAKT,gBACduB,SAAUjC,EAHZ,kBAOA,wBACE+B,KAAK,SACLC,QAASb,KAAKjB,gBACd+B,SAAUhC,EAHZ,qBAQF,sBAAKmB,UAAU,eAAf,UACE,wBAAOc,QAAQ,QAAf,gCAEE,uBACEH,KAAK,SACLI,GAAG,QACHtB,KAAK,YACLE,MAAOnB,EACPwC,IAAI,IACJC,IAAG,UAAK/B,EAAOC,QACfb,KAAM,EACN4C,SAAUnB,KAAKR,eAGnB,wBAAOuB,QAAQ,OAAf,0BAEE,uBACEH,KAAK,SACLI,GAAG,OACHtB,KAAK,OACLE,MAAOrB,EACP0C,IAAI,IACJC,IAAI,IACJ3C,KAAM,EACN4C,SAAUnB,KAAKR,eAGnB,wBAAOuB,QAAQ,YAAf,wBAEE,uBACEH,KAAK,SACLI,GAAG,YACHtB,KAAK,YACLE,MAAOpB,EACPyC,IAAI,MACJC,IAAI,MACJ3C,KAAM,EACN4C,SAAUnB,KAAKR,eAGnB,wBAAOuB,QAAQ,oBAAf,wBAEE,uBACEH,KAAK,SACLI,GAAG,oBACHtB,KAAK,oBACLE,MAAOlB,EACPuC,IAAI,OACJC,IAAI,OACJ3C,KAAM,IACN4C,SAAUnB,KAAKR,eAGnB,wBACEuB,QAAQ,WACRd,UAAU,yBAFZ,sBAKE,uBACEe,GAAG,WACHJ,KAAK,WACLlB,KAAK,WACLK,QAASnB,EACTuC,SAAUnB,KAAKH,2B,GA5MNuB,IAAMC,WAqNdhD,IC/NTiD,E,4MACJhD,MAAQ,CACNa,OAAQ,CACN,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,iB,4CAIJ,WACE,IAAQA,EAAWa,KAAK1B,MAAhBa,OAER,OACE,sBAAKc,UAAU,MAAf,UAEE,gDAAmBd,EAAOC,OAA1B,aAEA,cAAC,EAAD,CACED,OAAQA,W,GAzBAiC,IAAMC,WAgCTC,ICrCfC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.f1b5816d.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n};\n\ntype State = {\n  step: number,\n  itemWidth: number,\n  frameSize: number,\n  animationDuration: number,\n  location: number,\n  infinity: boolean,\n  disabledNext: boolean,\n  disabledPrev: boolean,\n};\n\nclass Carousel extends React.Component<Props, State> {\n  state: State = {\n    step: 3,\n    itemWidth: 130,\n    frameSize: 3,\n    animationDuration: 1000,\n    location: 0,\n    infinity: false,\n    disabledPrev: true,\n    disabledNext: false,\n  };\n\n  handleNextClick = () => {\n    const {\n      location,\n      infinity,\n      itemWidth,\n      step,\n      frameSize,\n    } = this.state;\n\n    const initLocation = this.state.itemWidth * this.state.step;\n    const width = (this.props.images.length - frameSize) * itemWidth;\n\n    this.setState((prevState) => ({\n      location: ((itemWidth * step) + prevState.location >= width)\n        ? width\n        : prevState.location + initLocation,\n      disabledPrev: false,\n    }));\n\n    if (((location + initLocation) >= width) && !infinity) {\n      this.setState({\n        disabledNext: true,\n      });\n    }\n\n    if (infinity && location >= width) {\n      this.setState({\n        location: 0,\n        disabledNext: false,\n      });\n    }\n  };\n\n  handlePrevClick = () => {\n    const { location } = this.state;\n    const initLocation = this.state.itemWidth * this.state.step;\n\n    this.setState((prevState) => ({\n      location: (prevState.location - initLocation) > 0\n        ? prevState.location - initLocation\n        : 0,\n      disabledNext: false,\n    }));\n\n    if ((location - initLocation) <= 0) {\n      this.setState({\n        disabledPrev: true,\n      });\n    }\n  };\n\n  getChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name } = event.target;\n\n    this.setState({ [name]: +event.target.value } as unknown as Pick<State, keyof State>);\n  };\n\n  getInfinity = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { checked } = e.target;\n\n    this.setState(() => ({\n      infinity: checked,\n    }));\n\n    if (checked === true) {\n      this.setState(() => ({\n        disabledNext: false,\n      }));\n    }\n  };\n\n  render() {\n    const { images } = this.props;\n    const {\n      itemWidth,\n      frameSize,\n      animationDuration,\n      location,\n      disabledPrev,\n      disabledNext,\n      infinity,\n      step,\n    } = this.state;\n\n    return (\n      <div className=\"Carousel\">\n        <div\n          className=\"Carousel__container\"\n          style={{ width: `${itemWidth * frameSize}px` }}\n        >\n          <ul\n            className=\"Carousel__list\"\n            style={{\n              transform: `translateX(-${location}px)`,\n              maxWidth: `${images.length * itemWidth}px`,\n              transition: `${animationDuration}ms`,\n            }}\n          >\n            {images.map(image => (\n              <li key={images.indexOf(image)}>\n                <img\n                  src={image}\n                  alt=\"img\"\n                  className=\"Carousel__list-img\"\n                  style={{\n                    width: `${itemWidth}px`,\n                    height: `${itemWidth}px`,\n                  }}\n                />\n              </li>\n            ))}\n          </ul>\n        </div>\n        <div className=\"btnBlock\">\n          <button\n            type=\"button\"\n            onClick={this.handlePrevClick}\n            disabled={disabledPrev}\n          >\n            Prev\n          </button>\n          <button\n            type=\"button\"\n            onClick={this.handleNextClick}\n            disabled={disabledNext}\n          >\n            Next\n          </button>\n        </div>\n        <div className=\"controlBlock\">\n          <label htmlFor=\"frame\">\n            Choose frame size :\n            <input\n              type=\"number\"\n              id=\"frame\"\n              name=\"frameSize\"\n              value={frameSize}\n              min=\"1\"\n              max={`${images.length}`}\n              step={1}\n              onChange={this.getChange}\n            />\n          </label>\n          <label htmlFor=\"step\">\n            Choose step :\n            <input\n              type=\"number\"\n              id=\"step\"\n              name=\"step\"\n              value={step}\n              min=\"1\"\n              max=\"7\"\n              step={1}\n              onChange={this.getChange}\n            />\n          </label>\n          <label htmlFor=\"itemWidth\">\n            Item Size :\n            <input\n              type=\"number\"\n              id=\"itemWidth\"\n              name=\"itemWidth\"\n              value={itemWidth}\n              min=\"130\"\n              max=\"190\"\n              step={5}\n              onChange={this.getChange}\n            />\n          </label>\n          <label htmlFor=\"animationDuration\">\n            Animation :\n            <input\n              type=\"number\"\n              id=\"animationDuration\"\n              name=\"animationDuration\"\n              value={animationDuration}\n              min=\"1000\"\n              max=\"3000\"\n              step={200}\n              onChange={this.getChange}\n            />\n          </label>\n          <label\n            htmlFor=\"infinity\"\n            className=\"controlBlock__infinity\"\n          >\n            Infinity:\n            <input\n              id=\"infinity\"\n              type=\"checkbox\"\n              name=\"Infinity\"\n              checked={infinity}\n              onChange={this.getInfinity}\n            />\n          </label>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[],\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1>Carousel with {images.length} images</h1>\n\n        <Carousel\n          images={images}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}